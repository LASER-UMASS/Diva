##############################################################################
##                 The Calculus of Inductive Constructions                  ##
##                                                                          ##
##                                Projet Coq                                ##
##                                                                          ##
##                     INRIA                        ENS-CNRS                ##
##              Rocquencourt                        Lyon                    ##
##                                                                          ##
##                                Coq V6.1                                  ##
##                                                                          ##
##                                                                          ##
##############################################################################

# WARNING
#
# This Makefile has been automagically generated by do_Makefile
# Edit at your own risks !
#
# END OF WARNING

##########################
#                        #
# Variables definitions. #
#                        #
##########################

CAMLP4LIB=`camlp4 -where`
MAKE=make "COQBIN=$(COQBIN)" "OPT=$(OPT)"
COQSRC=-I $(COQTOP)/src/tactics -I $(COQTOP)/src/proofs \
  -I $(COQTOP)/src/syntax -I $(COQTOP)/src/env -I $(COQTOP)/src/lib/util \
  -I $(COQTOP)/src/constr -I $(COQTOP)/tactics -I $(COQTOP)/src/meta \
  -I $(COQTOP)/src/parsing -I $(COQTOP)/src/typing -I $(CAMLP4LIB)
ZFLAGS=$(LIBS) $(COQSRC)
FULLOPT=$(OPT:-opt=-full)
COQFLAGS=-q $(OPT) $(LIBS)
COQC=$(COQBIN)coqc
COQFULL=$(COQBIN)coqc $(FULLOPT) -q $(LIBS)
GALLINA=gallina
COQ2HTML=coq2html
COQ2LATEX=coq2latex
CAMLC=ocamlc -c
CAMLOPT=ocamlopt -c
CAMLLINK=ocamlc
CAMLOPTLINK=ocamlopt
COQDEP=$(COQBIN)coqdep -c
P4=$(COQBIN)call_camlp4 -I $(COQTOP)/src/parsing \
  -I $(COQTOP)/theories/INIT -I $(COQTOP)/tactics
P4DEP=$(COQBIN)camlp4dep

#########################
#                       #
# Libraries definition. #
#                       #
#########################

LIBS=-I .

###################################
#                                 #
# Definition of the "all" target. #
#                                 #
###################################

all:: alternate.vo\
  cardinal.vo\
  comm.vo\
  invariant0.vo\
  invariant1.vo\
  invariant2.vo\
  invariant3.vo\
  invariant4.vo\
  invariant5.vo\
  invariant6.vo\
  machine.vo\
  still_to_prove.vo

spec:: alternate.vi\
  cardinal.vi\
  comm.vi\
  invariant0.vi\
  invariant1.vi\
  invariant2.vi\
  invariant3.vi\
  invariant4.vi\
  invariant5.vi\
  invariant6.vi\
  machine.vi\
  still_to_prove.vi

gallina:: alternate.g\
  cardinal.g\
  comm.g\
  invariant0.g\
  invariant1.g\
  invariant2.g\
  invariant3.g\
  invariant4.g\
  invariant5.g\
  invariant6.g\
  machine.g\
  still_to_prove.g

html:: alternate.html\
  cardinal.html\
  comm.html\
  invariant0.html\
  invariant1.html\
  invariant2.html\
  invariant3.html\
  invariant4.html\
  invariant5.html\
  invariant6.html\
  machine.html\
  still_to_prove.html

tex:: alternate.tex\
  cardinal.tex\
  comm.tex\
  invariant0.tex\
  invariant1.tex\
  invariant2.tex\
  invariant3.tex\
  invariant4.tex\
  invariant5.tex\
  invariant6.tex\
  machine.tex\
  still_to_prove.tex

####################
#                  #
# Special targets. #
#                  #
####################

.PHONY: all opt byte archclean clean install depend

.SUFFIXES: .v .vo .vi .g .html .tex .g.tex .g.html

.v.vo:
	$(COQC) $(COQDEBUG) $(COQFLAGS) $*

.v.vi:
	$(COQC) -i $(COQDEBUG) $(COQFLAGS) $*

.v.g:
	$(GALLINA) $<

.v.html:
	$(COQ2HTML) $<

.v.tex:
	$(COQ2LATEX) $< -latex -o $@

.v.g.html:
	$(GALLINA) -stdout $< | $(COQ2HTML) -f > $@

.v.g.tex:
	$(GALLINA) -stdout $< | $(COQ2LATEX) - -latex -o $@

byte::
	$(MAKE) all "OPT="

opt::
	$(MAKE) all "OPT=-opt"

include .depend

depend::
	rm .depend
	$(COQDEP) -i $(LIBS) *.v *.ml *.mli >.depend
	$(COQDEP) $(LIBS) -suffix .html *.v >>.depend

install::
	@if test -z $(TARGETDIR); then echo "You must set TARGETDIR (for instance with 'make TARGETDIR=foobla install')"; exit 1; fi
	cp -f *.vo $(TARGETDIR)

Makefile::
	mv -f Makefile Makefile.bak
	do_Makefile -f Make -o Makefile

clean::
	rm -f *.cmo *.cmi *.cmx *.o *.vo *.vi *~

archclean::
	rm -f *.cmx *.o

# WARNING
#
# This Makefile has been automagically generated by do_Makefile
# Edit at your own risks !
#
# END OF WARNING

